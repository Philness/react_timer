PART 1 - Make an onStatusChange() function
    Make a method called onStatuschange, which is a React built-in, call it an anonymous function
    Pass in the argument newStatus, since you'll need to know the status before you decide what to do.
    For each component that needs the click handler, set the onClick = prop for them equal to this.(method name)(new status)
    The onClick can return either a value or a function.

PART 2 - Use a currying pattern to return a differerent function depending on what gets passed in - don't just return a value
    In the onStatuschange method, make it return a new arrow function, which returns this.props.onStatusChange(newProps)
    You are basically pointing the onClick property to a local method called onStatusChange, 
        but you have to establish functional context for it, or else onClick will mistake it for a prop rather than a method
            which means you'll probably need to pass in onStatusChange from the parent.
